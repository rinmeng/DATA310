source("C:/Users/agarp/DATA310/a3/test.R")
table.b1
source("C:/Users/agarp/DATA310/a3/test.R")
source("C:/Users/agarp/DATA310/a3/test.R")
source("C:/Users/agarp/DATA310/a3/test.R")
source("C:/Users/agarp/DATA310/a3/test.R")
source("C:/Users/agarp/DATA310/a3/test.R")
source("C:/Users/agarp/DATA310/a3/test.R")
source("C:/Users/agarp/DATA310/a3/test.R")
source("C:/Users/agarp/DATA310/a3/test.R")
source("C:/Users/agarp/DATA310/a3/test.R")
source("C:/Users/agarp/DATA310/a3/test.R")
source("C:/Users/agarp/DATA310/a3/test.R")
source("C:/Users/agarp/DATA310/a3/test.R")
table.b1
source("C:/Users/agarp/DATA310/a3/a4.R")
model_3.1
summary(model_3.1)
source("C:/Users/agarp/DATA310/a3/a4.R")
source("C:/Users/agarp/DATA310/a3/a4.R")
source("C:/Users/agarp/DATA310/a3/a4.R")
source("C:/Users/agarp/DATA310/a3/a4.R")
library(MPV)
model_3.1 <- lm(y ~ x2 + x7 + x8, data = table.b1)
anova_3.1 <- anova(model_3.1)
anova_3.1
source("C:/Users/agarp/DATA310/a3/a4.R")
library(MPV)
model_3.1 <- lm(y ~ x2 + x7 + x8, data = table.b1)
summary(model_3.1)
anova_3.1 <- anova(model_3.1)
anova_3.1
t_stats
library(MPV)
model_3.1 <- lm(y ~ x2 + x7 + x8, data = table.b1)
anova_3.1 <- anova(model_3.1)
t_stats <- summary_model_3.1$coefficients[, "t value"]
library(MPV)
model_3.1 <- lm(y ~ x2 + x7 + x8, data = table.b1)
summary_model_3.1 <- summary(model_3.1)
anova_3.1 <- anova(model_3.1)
anova_3.1
t_stats <- summary_model_3.1$coefficients[, "t value"]
t_stats
library(MPV)
model_3.1 <- lm(y ~ x2 + x7 + x8, data = table.b1)
summary_model_3.1 <- summary(model_3.1)
anova_3.1 <- anova(model_3.1)
anova_3.1
t_stats <- summary_model_3.1$coefficients[, "t value"]
t_stats
# R squared
r_squared <- summary_model_3.1$r.squared
r_squared
# Adjusted R squared
adj_r_squared <- summary_model_3.1$adj.r.squared
adj_r_squared
library(MPV)
model_3.1 <- lm(y ~ x2 + x7 + x8, data = table.b1)
summary_model_3.1 <- summary(model_3.1)
anova_3.1 <- anova(model_3.1)
anova_3.1
t_stats <- summary_model_3.1$coefficients[, "t value"]
t_stats
# R squared
r_squared <- summary_model_3.1$r.squared
r_squared
# Adjusted R squared
adj_r_squared <- summary_model_3.1$adj.r.squared
adj_r_squared
reduced_model <- lm(y ~ x2 + x8, data = table.b1)
summary_reduced_model <- summary(reduced_model)
library(MPV)
model_3.1 <- lm(y ~ x2 + x7 + x8, data = table.b1)
summary_model_3.1 <- summary(model_3.1)
anova_3.1 <- anova(model_3.1)
anova_3.1
t_stats <- summary_model_3.1$coefficients[, "t value"]
t_stats
# R squared
r_squared <- summary_model_3.1$r.squared
r_squared
# Adjusted R squared
adj_r_squared <- summary_model_3.1$adj.r.squared
adj_r_squared
reduced_model <- lm(y ~ x2 + x8, data = table.b1)
summary_reduced_model <- summary(reduced_model)
library(MPV)
model_3.1 <- lm(y ~ x2 + x7 + x8, data = table.b1)
summary_model_3.1 <- summary(model_3.1)
anova_3.1 <- anova(model_3.1)
anova_3.1
t_stats <- summary_model_3.1$coefficients[, "t value"]
t_stats
# R squared
r_squared <- summary_model_3.1$r.squared
r_squared
# Adjusted R squared
adj_r_squared <- summary_model_3.1$adj.r.squared
adj_r_squared
reduced_model <- lm(y ~ x2 + x8, data = table.b1)
summary(reduced_model)
library(MPV)
model_3.1 <- lm(y ~ x2 + x7 + x8, data = table.b1)
summary_model_3.1 <- summary(model_3.1)
anova_3.1 <- anova(model_3.1)
anova_3.1
t_stats <- summary_model_3.1$coefficients[, "t value"]
t_stats
# R squared
r_squared <- summary_model_3.1$r.squared
r_squared
# Adjusted R squared
adj_r_squared <- summary_model_3.1$adj.r.squared
adj_r_squared
reduced_model <- lm(y ~ x2 + x8, data = table.b1)
summary(reduced_model)
# Get the residual sum of squares (RSS) for both models
RSS_full <- sum(residuals(model_full)^2)
library(MPV)
model_3.1 <- lm(y ~ x2 + x7 + x8, data = table.b1)
summary_model_3.1 <- summary(model_3.1)
anova_3.1 <- anova(model_3.1)
anova_3.1
t_stats <- summary_model_3.1$coefficients[, "t value"]
t_stats
# R squared
r_squared <- summary_model_3.1$r.squared
r_squared
# Adjusted R squared
adj_r_squared <- summary_model_3.1$adj.r.squared
adj_r_squared
reduced_model <- lm(y ~ x2 + x8, data = table.b1)
summary(reduced_model)
modelfull <- model_3.1
# Get the residual sum of squares (RSS) for both models
RSS_full <- sum(residuals(model_full)^2)
library(MPV)
model_3.1 <- lm(y ~ x2 + x7 + x8, data = table.b1)
summary_model_3.1 <- summary(model_3.1)
anova_3.1 <- anova(model_3.1)
anova_3.1
t_stats <- summary_model_3.1$coefficients[, "t value"]
t_stats
# R squared
r_squared <- summary_model_3.1$r.squared
r_squared
# Adjusted R squared
adj_r_squared <- summary_model_3.1$adj.r.squared
adj_r_squared
reduced_model <- lm(y ~ x2 + x8, data = table.b1)
summary(reduced_model)
modelfull <- model_3.1
# Get the residual sum of squares (RSS) for both models
RSS_full <- sum(residuals(model_full)^2)
library(MPV)
model_3.1 <- lm(y ~ x2 + x7 + x8, data = table.b1)
summary_model_3.1 <- summary(model_3.1)
anova_3.1 <- anova(model_3.1)
anova_3.1
t_stats <- summary_model_3.1$coefficients[, "t value"]
t_stats
# R squared
r_squared <- summary_model_3.1$r.squared
r_squared
# Adjusted R squared
adj_r_squared <- summary_model_3.1$adj.r.squared
adj_r_squared
reduced_model <- lm(y ~ x2 + x8, data = table.b1)
summary(reduced_model)
modelfull <- model_3.1
# Get the residual sum of squares (RSS) for both models
RSS_full <- sum(residuals(model_full)^2)
library(MPV)
model_3.1 <- lm(y ~ x2 + x7 + x8, data = table.b1)
summary_model_3.1 <- summary(model_3.1)
anova_3.1 <- anova(model_3.1)
anova_3.1
t_stats <- summary_model_3.1$coefficients[, "t value"]
t_stats
# R squared
r_squared <- summary_model_3.1$r.squared
r_squared
# Adjusted R squared
adj_r_squared <- summary_model_3.1$adj.r.squared
adj_r_squared
reduced_model <- lm(y ~ x2 + x8, data = table.b1)
summary(reduced_model)
modelfull <- model_3.1
# Get the residual sum of squares (RSS) for both models
RSS_full <- sum(residuals(model_full)^2)
library(MPV)
model_3.1 <- lm(y ~ x2 + x7 + x8, data = table.b1)
summary_model_3.1 <- summary(model_3.1)
anova_3.1 <- anova(model_3.1)
anova_3.1
t_stats <- summary_model_3.1$coefficients[, "t value"]
t_stats
# R squared
r_squared <- summary_model_3.1$r.squared
r_squared
# Adjusted R squared
adj_r_squared <- summary_model_3.1$adj.r.squared
adj_r_squared
reduced_model <- lm(y ~ x2 + x8, data = table.b1)
summary(reduced_model)
model_full <- model_3.1
# Get the residual sum of squares (RSS) for both models
RSS_full <- sum(residuals(model_full)^2)
RSS_reduced <- sum(residuals(model_reduced)^2)
library(MPV)
model_3.1 <- lm(y ~ x2 + x7 + x8, data = table.b1)
summary_model_3.1 <- summary(model_3.1)
anova_3.1 <- anova(model_3.1)
anova_3.1
t_stats <- summary_model_3.1$coefficients[, "t value"]
t_stats
# R squared
r_squared <- summary_model_3.1$r.squared
r_squared
# Adjusted R squared
adj_r_squared <- summary_model_3.1$adj.r.squared
adj_r_squared
model_reduced <- lm(y ~ x2 + x8, data = table.b1)
summary(model_reduced)
model_full <- model_3.1
# Get the residual sum of squares (RSS) for both models
RSS_full <- sum(residuals(model_full)^2)
RSS_reduced <- sum(residuals(model_reduced)^2)
# Get the number of parameters (coefficients) in the full and reduced models
p_full <- length(coef(model_full))  # including the intercept
p_reduced <- length(coef(model_reduced))  # including the intercept
# Get the degrees of freedom for the full model
df_full <- df.residual(model_full)
# Calculate the partial F-statistic
F_statistic <- ((RSS_reduced - RSS_full) / (p_full - p_reduced)) / (RSS_full / df_full)
F_statistic
sqrt(4.832354)
model <- lm(y ~ x2 + x7 + x8, data = table.b1)
R_squared <- summary(model)$r.squared
R_squared
model <- lm(y ~ x2 + x7 + x8, data = table.b1)
R_squared <- summary(model)$r.squared
y_fitted <- fitted(model)
y_observed <- table.b1$y
r <- cor(y_observed, y_fitted)
r_squared <- r^2
print(R_squared)
print(r_squared)
model <- lm(y ~ x2 + x7 + x8, data = table.b1)
R_squared <- summary(model)$r.squared
y_fitted <- fitted(model)
y_observed <- table.b1$y
r <- cor(y_observed, y_fitted)
r_squared <- r^2
print(R_squared == r_squared)
model <- lm(y ~ x2 + x7 + x8, data = table.b1)
R_squared <- summary(model)$r.squared
y_fitted <- fitted(model)
y_observed <- table.b1$y
r <- cor(y_observed, y_fitted)
r_squared <- r^2
print(cat("R squared: ", R_squared))
print(cat("R squared: ", r_squared))
model <- lm(y ~ x2 + x7 + x8, data = table.b1)
R_squared <- summary(model)$r.squared
y_fitted <- fitted(model)
y_observed <- table.b1$y
r <- cor(y_observed, y_fitted)
r_squared <- r^2
cat("R squared (from model): ", R_squared, "\n")
cat("R squared (from correlation): ", r_squared, "\n")
print(R_squared)
print(r_squared)
model <- lm(y ~ x2 + x7 + x8, data = table.b1)
R_squared <- summary(model)$r.squared
y_fitted <- fitted(model)
y_observed <- table.b1$y
r <- cor(y_observed, y_fitted)
r_squared <- r^2
cat("R squared (from model): ", R_squared, "\n")
cat("R squared (from correlation): ", r_squared, "\n")
# Extract coefficients and standard errors
coefficients <- summary(model)$coefficients
beta_2 <- coefficients["x2", "Estimate"]
SE_beta_2 <- coefficients["x2", "Std. Error"]
# Degrees of freedom
df <- df.residual(model)
# Critical t-value for 95% CI
t_crit <- qt(0.975, df)
# Confidence interval for beta_2
CI_beta_2 <- c(beta_2 - t_crit * SE_beta_2, beta_2 + t_crit * SE_beta_2)
print(CI_beta_2)
model <- lm(y ~ x2 + x7 + x8, data = table.b1)
R_squared <- summary(model)$r.squared
y_fitted <- fitted(model)
y_observed <- table.b1$y
r <- cor(y_observed, y_fitted)
r_squared <- r^2
cat("R squared (from model): ", R_squared, "\n")
cat("R squared (from correlation): ", r_squared, "\n")
# Extract coefficients and standard errors
coefficients <- summary(model)$coefficients
beta_2 <- coefficients["x2", "Estimate"]
SE_beta_2 <- coefficients["x2", "Std. Error"]
# Degrees of freedom
df <- df.residual(model)
# Critical t-value for 95% CI
t_crit <- qt(0.975, df)
# Confidence interval for beta_2
CI_beta_2 <- c(beta_2 - t_crit * SE_beta_2, beta_2 + t_crit * SE_beta_2)
print(CI_beta_2)
model <- lm(y ~ x2 + x7 + x8, data = table.b1)
R_squared <- summary(model)$r.squared
y_fitted <- fitted(model)
y_observed <- table.b1$y
r <- cor(y_observed, y_fitted)
r_squared <- r^2
cat("R squared (from model): ", R_squared, "\n")
cat("R squared (from correlation): ", r_squared, "\n")
# Extract coefficients and standard errors
coefficients <- summary(model)$coefficients
beta_2 <- coefficients["x2", "Estimate"]
SE_beta_2 <- coefficients["x2", "Std. Error"]
# Degrees of freedom
df <- df.residual(model)
# Critical t-value for 95% CI
t_crit <- qt(0.975, df)
# Confidence interval for beta_2
CI_beta_2 <- c(beta_2 - t_crit * SE_beta_2, beta_2 + t_crit * SE_beta_2)
print(CI_beta_2)
# New observation
new_obs <- data.frame(x2 = 2300, x7 = 56.0, x8 = 2100)
# Predicted mean response
y_hat <- predict(model, new_obs)
# Standard error of the prediction
SE_y_hat <- predict(model, new_obs, se.fit = TRUE)$se.fit
# Confidence interval for the mean response
CI_y_hat <- c(y_hat - t_crit * SE_y_hat, y_hat + t_crit * SE_y_hat)
print(CI_y_hat)
new_model <- lm(y ~ x7 + x8, data = table.b1)
summary(new_model)
new_model <- lm(y ~ x7 + x8, data = table.b1)
coefficients <- summary(new_model)$coefficients
beta_7 <- coefficients["x7", "Estimate"]
SE_beta_7 <- coefficients["x7", "Std. Error"]
df <- df.residual(new_model)
t_crit <- qt(0.975, df)
CI_beta_7 <- c(beta_7 - t_crit * SE_beta_7,
beta_7 + t_crit * SE_beta_7)
new_model <- lm(y ~ x7 + x8, data = table.b1)
coefficients <- summary(new_model)$coefficients
beta_7 <- coefficients["x7", "Estimate"]
SE_beta_7 <- coefficients["x7", "Std. Error"]
df <- df.residual(new_model)
t_crit <- qt(0.975, df)
CI_beta_7 <- c(beta_7 - t_crit * SE_beta_7,
beta_7 + t_crit * SE_beta_7)
print(CI_beta_7)
new_model <- lm(y ~ x7 + x8, data = table.b1)
coefficients <- summary(new_model)$coefficients
beta_7 <- coefficients["x7", "Estimate"]
SE_beta_7 <- coefficients["x7", "Std. Error"]
df <- df.residual(new_model)
t_crit <- qt(0.975, df)
CI_beta_7 <- c(beta_7 - t_crit * SE_beta_7,
beta_7 + t_crit * SE_beta_7)
print(CI_beta_7)
# new obs
new_obs <- data.frame(x7 = 56.0, x8 = 2100)
# predict
y_hat <- predict(new_model, new_obs)
SE_y_hat <- predict(new_model, new_obs, se.fit = TRUE)$se.fit
CI_y_hat <- c(y_hat - t_crit * SE_y_hat,
y_hat + t_crit * SE_y_hat)
print(CI_y_hat)
